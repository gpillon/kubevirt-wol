// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.28.3
// source: api/wol/v1/wol.proto

package wolv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ResponseStatus indica il risultato del processing
type ResponseStatus int32

const (
	ResponseStatus_UNKNOWN            ResponseStatus = 0
	ResponseStatus_ACCEPTED           ResponseStatus = 1 // Evento accettato e in processing
	ResponseStatus_DUPLICATE          ResponseStatus = 2 // Evento duplicato (già processato recentemente)
	ResponseStatus_VM_NOT_FOUND       ResponseStatus = 3 // Nessuna VM configurata per questo MAC
	ResponseStatus_VM_START_INITIATED ResponseStatus = 4 // Start della VM iniziato con successo
	ResponseStatus_VM_ALREADY_RUNNING ResponseStatus = 5 // VM già in esecuzione
	ResponseStatus_ERROR              ResponseStatus = 6 // Errore durante il processing
)

// Enum value maps for ResponseStatus.
var (
	ResponseStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "ACCEPTED",
		2: "DUPLICATE",
		3: "VM_NOT_FOUND",
		4: "VM_START_INITIATED",
		5: "VM_ALREADY_RUNNING",
		6: "ERROR",
	}
	ResponseStatus_value = map[string]int32{
		"UNKNOWN":            0,
		"ACCEPTED":           1,
		"DUPLICATE":          2,
		"VM_NOT_FOUND":       3,
		"VM_START_INITIATED": 4,
		"VM_ALREADY_RUNNING": 5,
		"ERROR":              6,
	}
)

func (x ResponseStatus) Enum() *ResponseStatus {
	p := new(ResponseStatus)
	*p = x
	return p
}

func (x ResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wol_v1_wol_proto_enumTypes[0].Descriptor()
}

func (ResponseStatus) Type() protoreflect.EnumType {
	return &file_api_wol_v1_wol_proto_enumTypes[0]
}

func (x ResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseStatus.Descriptor instead.
func (ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_wol_v1_wol_proto_rawDescGZIP(), []int{0}
}

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wol_v1_wol_proto_enumTypes[1].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_api_wol_v1_wol_proto_enumTypes[1]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_wol_v1_wol_proto_rawDescGZIP(), []int{4, 0}
}

// WOLEvent rappresenta un pacchetto WOL ricevuto da un agent
type WOLEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MAC address del target in formato xx:xx:xx:xx:xx:xx
	MacAddress string `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// Timestamp di ricezione del pacchetto
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Nome del nodo Kubernetes che ha ricevuto il pacchetto
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// IP sorgente del pacchetto WOL
	SourceIp string `protobuf:"bytes,4,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	// Porta sorgente del pacchetto
	SourcePort uint32 `protobuf:"varint,5,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	// Dimensione del pacchetto ricevuto
	PacketSize    uint32 `protobuf:"varint,6,opt,name=packet_size,json=packetSize,proto3" json:"packet_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WOLEvent) Reset() {
	*x = WOLEvent{}
	mi := &file_api_wol_v1_wol_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WOLEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WOLEvent) ProtoMessage() {}

func (x *WOLEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_wol_v1_wol_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WOLEvent.ProtoReflect.Descriptor instead.
func (*WOLEvent) Descriptor() ([]byte, []int) {
	return file_api_wol_v1_wol_proto_rawDescGZIP(), []int{0}
}

func (x *WOLEvent) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *WOLEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *WOLEvent) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *WOLEvent) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *WOLEvent) GetSourcePort() uint32 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *WOLEvent) GetPacketSize() uint32 {
	if x != nil {
		return x.PacketSize
	}
	return 0
}

// WOLEventResponse conferma la ricezione e il processing dell'evento
type WOLEventResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status di processamento
	Status ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=wol.v1.ResponseStatus" json:"status,omitempty"`
	// Messaggio descrittivo
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Se trovata, info sulla VM target
	VmInfo *VMInfo `protobuf:"bytes,3,opt,name=vm_info,json=vmInfo,proto3" json:"vm_info,omitempty"`
	// Se l'evento era un duplicato (deduplica globale)
	WasDuplicate bool `protobuf:"varint,4,opt,name=was_duplicate,json=wasDuplicate,proto3" json:"was_duplicate,omitempty"`
	// Tempo impiegato per processare la richiesta (millisecondi)
	ProcessingTimeMs int64 `protobuf:"varint,5,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WOLEventResponse) Reset() {
	*x = WOLEventResponse{}
	mi := &file_api_wol_v1_wol_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WOLEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WOLEventResponse) ProtoMessage() {}

func (x *WOLEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_wol_v1_wol_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WOLEventResponse.ProtoReflect.Descriptor instead.
func (*WOLEventResponse) Descriptor() ([]byte, []int) {
	return file_api_wol_v1_wol_proto_rawDescGZIP(), []int{1}
}

func (x *WOLEventResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_UNKNOWN
}

func (x *WOLEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WOLEventResponse) GetVmInfo() *VMInfo {
	if x != nil {
		return x.VmInfo
	}
	return nil
}

func (x *WOLEventResponse) GetWasDuplicate() bool {
	if x != nil {
		return x.WasDuplicate
	}
	return false
}

func (x *WOLEventResponse) GetProcessingTimeMs() int64 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

// VMInfo contiene informazioni sulla VM target
type VMInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CurrentState  string                 `protobuf:"bytes,3,opt,name=current_state,json=currentState,proto3" json:"current_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMInfo) Reset() {
	*x = VMInfo{}
	mi := &file_api_wol_v1_wol_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMInfo) ProtoMessage() {}

func (x *VMInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_wol_v1_wol_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMInfo.ProtoReflect.Descriptor instead.
func (*VMInfo) Descriptor() ([]byte, []int) {
	return file_api_wol_v1_wol_proto_rawDescGZIP(), []int{2}
}

func (x *VMInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VMInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *VMInfo) GetCurrentState() string {
	if x != nil {
		return x.CurrentState
	}
	return ""
}

// HealthCheckRequest per verificare stato server
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_api_wol_v1_wol_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wol_v1_wol_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_api_wol_v1_wol_proto_rawDescGZIP(), []int{3}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// HealthCheckResponse risposta health check
type HealthCheckResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=wol.v1.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_api_wol_v1_wol_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_wol_v1_wol_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_api_wol_v1_wol_proto_rawDescGZIP(), []int{4}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

var File_api_wol_v1_wol_proto protoreflect.FileDescriptor

const file_api_wol_v1_wol_proto_rawDesc = "" +
	"\n" +
	"\x14api/wol/v1/wol.proto\x12\x06wol.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe1\x01\n" +
	"\bWOLEvent\x12\x1f\n" +
	"\vmac_address\x18\x01 \x01(\tR\n" +
	"macAddress\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tnode_name\x18\x03 \x01(\tR\bnodeName\x12\x1b\n" +
	"\tsource_ip\x18\x04 \x01(\tR\bsourceIp\x12\x1f\n" +
	"\vsource_port\x18\x05 \x01(\rR\n" +
	"sourcePort\x12\x1f\n" +
	"\vpacket_size\x18\x06 \x01(\rR\n" +
	"packetSize\"\xd8\x01\n" +
	"\x10WOLEventResponse\x12.\n" +
	"\x06status\x18\x01 \x01(\x0e2\x16.wol.v1.ResponseStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12'\n" +
	"\avm_info\x18\x03 \x01(\v2\x0e.wol.v1.VMInfoR\x06vmInfo\x12#\n" +
	"\rwas_duplicate\x18\x04 \x01(\bR\fwasDuplicate\x12,\n" +
	"\x12processing_time_ms\x18\x05 \x01(\x03R\x10processingTimeMs\"_\n" +
	"\x06VMInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12#\n" +
	"\rcurrent_state\x18\x03 \x01(\tR\fcurrentState\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x94\x01\n" +
	"\x13HealthCheckResponse\x12A\n" +
	"\x06status\x18\x01 \x01(\x0e2).wol.v1.HealthCheckResponse.ServingStatusR\x06status\":\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x02*\x87\x01\n" +
	"\x0eResponseStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\f\n" +
	"\bACCEPTED\x10\x01\x12\r\n" +
	"\tDUPLICATE\x10\x02\x12\x10\n" +
	"\fVM_NOT_FOUND\x10\x03\x12\x16\n" +
	"\x12VM_START_INITIATED\x10\x04\x12\x16\n" +
	"\x12VM_ALREADY_RUNNING\x10\x05\x12\t\n" +
	"\x05ERROR\x10\x062\xda\x01\n" +
	"\n" +
	"WOLService\x12<\n" +
	"\x0eReportWOLEvent\x12\x10.wol.v1.WOLEvent\x1a\x18.wol.v1.WOLEventResponse\x12F\n" +
	"\x14ReportWOLEventStream\x12\x10.wol.v1.WOLEvent\x1a\x18.wol.v1.WOLEventResponse(\x010\x01\x12F\n" +
	"\vHealthCheck\x12\x1a.wol.v1.HealthCheckRequest\x1a\x1b.wol.v1.HealthCheckResponseB2Z0github.com/gpillon/kubevirt-wol/api/wol/v1;wolv1b\x06proto3"

var (
	file_api_wol_v1_wol_proto_rawDescOnce sync.Once
	file_api_wol_v1_wol_proto_rawDescData []byte
)

func file_api_wol_v1_wol_proto_rawDescGZIP() []byte {
	file_api_wol_v1_wol_proto_rawDescOnce.Do(func() {
		file_api_wol_v1_wol_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_wol_v1_wol_proto_rawDesc), len(file_api_wol_v1_wol_proto_rawDesc)))
	})
	return file_api_wol_v1_wol_proto_rawDescData
}

var file_api_wol_v1_wol_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_wol_v1_wol_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_wol_v1_wol_proto_goTypes = []any{
	(ResponseStatus)(0),                    // 0: wol.v1.ResponseStatus
	(HealthCheckResponse_ServingStatus)(0), // 1: wol.v1.HealthCheckResponse.ServingStatus
	(*WOLEvent)(nil),                       // 2: wol.v1.WOLEvent
	(*WOLEventResponse)(nil),               // 3: wol.v1.WOLEventResponse
	(*VMInfo)(nil),                         // 4: wol.v1.VMInfo
	(*HealthCheckRequest)(nil),             // 5: wol.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 6: wol.v1.HealthCheckResponse
	(*timestamppb.Timestamp)(nil),          // 7: google.protobuf.Timestamp
}
var file_api_wol_v1_wol_proto_depIdxs = []int32{
	7, // 0: wol.v1.WOLEvent.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: wol.v1.WOLEventResponse.status:type_name -> wol.v1.ResponseStatus
	4, // 2: wol.v1.WOLEventResponse.vm_info:type_name -> wol.v1.VMInfo
	1, // 3: wol.v1.HealthCheckResponse.status:type_name -> wol.v1.HealthCheckResponse.ServingStatus
	2, // 4: wol.v1.WOLService.ReportWOLEvent:input_type -> wol.v1.WOLEvent
	2, // 5: wol.v1.WOLService.ReportWOLEventStream:input_type -> wol.v1.WOLEvent
	5, // 6: wol.v1.WOLService.HealthCheck:input_type -> wol.v1.HealthCheckRequest
	3, // 7: wol.v1.WOLService.ReportWOLEvent:output_type -> wol.v1.WOLEventResponse
	3, // 8: wol.v1.WOLService.ReportWOLEventStream:output_type -> wol.v1.WOLEventResponse
	6, // 9: wol.v1.WOLService.HealthCheck:output_type -> wol.v1.HealthCheckResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_wol_v1_wol_proto_init() }
func file_api_wol_v1_wol_proto_init() {
	if File_api_wol_v1_wol_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_wol_v1_wol_proto_rawDesc), len(file_api_wol_v1_wol_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_wol_v1_wol_proto_goTypes,
		DependencyIndexes: file_api_wol_v1_wol_proto_depIdxs,
		EnumInfos:         file_api_wol_v1_wol_proto_enumTypes,
		MessageInfos:      file_api_wol_v1_wol_proto_msgTypes,
	}.Build()
	File_api_wol_v1_wol_proto = out.File
	file_api_wol_v1_wol_proto_goTypes = nil
	file_api_wol_v1_wol_proto_depIdxs = nil
}
